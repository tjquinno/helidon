/*
 * Copyright (c) 2023 Oracle and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.helidon.openapi;

import java.beans.IntrospectionException;
import java.beans.PropertyDescriptor;
import java.lang.reflect.Method;

import io.swagger.v3.oas.models.media.Schema;
import io.swagger.v3.oas.models.responses.ApiResponses;
import org.yaml.snakeyaml.nodes.Node;

class OpenApiUtilsSwagger implements OpenApiUtils {

    @Override
    public void setSchemaAdditionalProperties(Object untypedSchema, Object value) {
        Schema<?> schema = (Schema<?>) untypedSchema;
        if (value instanceof Boolean || value instanceof Schema) {
            schema.setAdditionalProperties(value);
        } else {
            throw new IllegalArgumentException("Expected additionalProperties as Boolean or Schema but was "
                                                       + value.getClass().getName());
        }
    }

    @Override
    public Object schemaAdditionalProperties(Object schema) {
        return ((Schema<?>) schema).getAdditionalProperties();
    }

    @Override
    public PropertyDescriptor schemaAdditionalPropertiesDescriptor() throws NoSuchMethodException, IntrospectionException {
        return new PropertyDescriptor("additionalProperties",
                                      Schema.class.getMethod("getAdditionalProperties"),
                                      Schema.class.getMethod("setAdditionalProperties", Object.class));
    }

    @Override
    public Class<?> schemaAdditionalPropertiesType(Node valueNode) {
        return Object.class;
    }

    @Override
    public Class<?> schemaType() {
        return Schema.class;
    }

    @Override
    public Class<?> apiResponsesType() {
        return ApiResponses.class;
    }

    @Override
    public String getRefMethodName() {
        return "get$ref";
    }

    @Override
    public String setRefMethodName() {
        return "set$ref";
    }

    @Override
    public String refFieldName() {
        return "$ref";
    }
}
